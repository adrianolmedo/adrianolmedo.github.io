[{"contents":"goplantuml generates code in PlantUML format that represents a diagram of the relationships between the Go receiver structs, they are analogous to classes in traditional OOP.\nA useful tool at the beginning of the design and planning a complex project in Go, if you want graphically observe which entities are stepping on interfaces, visually follow dependency injections or identify patterns.\nIf your project is flat without packages $ goplantuml -aggregate-private-members -show-compositions -show-implementations -show-aggregations . \u0026gt; diagram.puml If your project has packages $ goplantuml -aggregate-private-members -show-compositions -show-implementations -show-aggregations ./ \u0026gt; diagram.puml ","date":"23","image":"images/post/06.jpg","permalink":"https://examplesite.org/blog/how-to-use-goplantuml/","tags":["uml","oop"],"title":"How to use GoPlantUML?"},{"contents":"ffmpeg is a cli-tool that in addition to allowing multimedia file format conversion you can also record screen video starting from the terminal interface.\nI wrote this tutorial with the version n4.1.4, to know it use the flag -version:\n$ ffmpeg -version ffmpeg version n4.1.4 Copyright (c) 2000-2019 the FFmpeg developers built with gcc 7 (Ubuntu 7.4.0-1ubuntu1~18.04.1) configuration: --prefix= --prefix=/usr --disable-debug --disable-doc --disable-static --enable-avisynth --enable-cuda --enable-cuvid --enable-libdrm --enable-ffplay --enable-gnutls --enable-gpl --enable-libass --enable-libfdk-aac --enable-libfontconfig --enable-libfreetype --enable-libmp3lame --enable-libopencore_amrnb --enable-libopencore_amrwb --enable-libopus --enable-libpulse --enable-sdl2 --enable-libspeex --enable-libtheora --enable-libtwolame --enable-libv4l2 --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libx265 --enable-libxcb --enable-libxvid --enable-nonfree --enable-nvenc --enable-omx --enable-openal --enable-opencl --enable-runtime-cpudetect --enable-shared --enable-vaapi --enable-vdpau --enable-version3 --enable-xlib libavutil 56. 22.100 / 56. 22.100 libavcodec 58. 35.100 / 58. 35.100 libavformat 58. 20.100 / 58. 20.100 libavdevice 58. 5.100 / 58. 5.100 libavfilter 7. 40.101 / 7. 40.101 libswscale 5. 3.100 / 5. 3.100 libswresample 3. 3.100 / 3. 3.100 libpostproc 55. 3.100 / 55. 3.100 Record only video Get a .mp4 file ideal for generic players:\n$ ffmpeg -f x11grab -r 30 -s 1024x768 -i :0.0 record1.mp4 Explanation:\nffmpeg // we init ffmpeg  -f x11grab // source for the screen  -r 30 // frames per seconds  -s 1024x768 // screen resolution  -i :0.0 // screen input  record1.mp4\t// title of video with its respective format You can add -pix_fmt yuv420p, it makes the ffmpeg output in a standar pixel format that all players can display:\n$ ffmpeg -f x11grab -r 30 -s 1024x768 -i :0.0 -pix_fmt yuv420p output.mp4 Record video with internal audio and microphone Firts, you need to know the audio sources with $ ffmpeg -sources command, then it will show you with * for alsa (if installed) or pulse (pulseaudio), example:\n$ ffmpeg -sources Auto-detected sources for pulse: * alsa_output.pci-0000_00_1b.0.analog-stereo.monitor [Monitor of Audio Interno Estéreo analógico]  alsa_input.pci-0000_00_1b.0.analog-stereo [Audio Interno Estéreo analógico]  alsa_output.pci-0000_01_00.0.analog-stereo.monitor [Monitor of CMI8738/CMI8768 PCI Audio (CMI8738/C3DX PCI Audio Device) Estéreo analógico]  alsa_input.pci-0000_01_00.0.analog-stereo [CMI8738/CMI8768 PCI Audio (CMI8738/C3DX PCI Audio Device) Estéreo analógico] If you check with the graphical audio mixer, you will see that audio input is received from the microphone in \u0026lsquo;Analog Stereo Internal Audio\u0026rsquo;.\nffmpeg // we init ffmpeg  -f pulse // audio backend instance -i alsa_input.pci-0000_00_1b.0.analog-stereo // select the first audio source  -f pulse // instantiate the audio backend again -i alsa_output.pci-0000_00_1b.0.analog-stereo.monitor // seleccione segunda fuente de audio  -f x11grab // source for the screen -r 30 // fps (sometimes it can be 60) -s 1024x768 // screen resolution -i :0.0 // screen input -c:a mp3\t// audio codec (tt\u0026#39;s not necesary) -b:i 5M // recording speed (5mps) -ac 2 // audio channels (2 for estereo, although it already comes like this by default) -async 25 // audio and video sync (sometimes 1 or 1000 recommended) -filter_complex amix=inputs=2\t// synchronize the two audio sources -pix_fmt yuv420p // standard pixel format that all players can show record1.mkv // name of the video with its respective format - Version 1 (it worked):\n$ ffmpeg -f pulse -i alsa_input.pci-0000_00_1b.0.analog-stereo -f x11grab -r 30 -s 1024x768 -i :0.0 -ac 2 -async 25 -filter_complex amix=inputs=1 record3.mp4 It records microphone audio fine but not internal audio, eg: playback from YouTube.\n- Version 2 (it worked):\n$ ffmpeg -f pulse -i alsa_input.pci-0000_00_1b.0.analog-stereo -f pulse -i alsa_output.pci-0000_00_1b.0.analog-stereo.monitor -f x11grab -r 30 -s 1024x768 -i :0.0 -ac 2 -async 25 -filter_complex amix=inputs=2 record1.mp4 Record both audios.\n- Version 3 (it worked):\n$ ffmpeg -f pulse -i alsa_input.pci-0000_00_1b.0.analog-stereo -f x11grab -r 60 -s 1024x768 -i :0.0 -ac 2 -async 25 -filter_complex amix=inputs=2 record2.mp4 Sure by -filter_complex amix=inputs=2 since there are not two audio sources.\n References\nPurga Linux. (2020, January 7). Grabar pantalla, micro y audio interno con FFMPEG [Video]. YouTube. https://www.youtube.com/watch?v=vJ5WznUk4Qs\nHow to Install and Use FFmpeg on Ubuntu 18.04. (2019, December 20). Linuxize. https://linuxize.com/post/how-to-install-ffmpeg-on-ubuntu-18-04/\nUse -pix_fmt yuv420p to forced ffmpeg\u0026rsquo;s output to a standard pixel format that all players can show: https://stackoverflow.com/questions/44102207/ffplay-shows-video-but-ffmpeg-just-shows-black\nengineerRed. (2019, March 16). ffmpeg black screen recording [Comment on the article “ffmpeg black screen recording”]. Ask Ubuntu. https://askubuntu.com/a/1126289\n","date":"13","image":"images/post/02.jpg","permalink":"https://examplesite.org/blog/record-video-screen-with-ffmpeg/","tags":["ffmpeg"],"title":"Record video screen with FFmpeg"},{"contents":"youtube-dl is a cli-tool that allows us download videos from various sources (not only from YouTube) from the terminal interface. I wrote this tutorial using the version 2020.06.16.1, if you want to know what version you are running use --version:\n$ youtube-dl --version 2020.06.16.1 Before starting to download a video you must make sure in what format, quality and weight you want, with the command youtube-dl --list-formats followed by the video URL:\n$ youtube-dl --list-formats https://www.youtube.com/watch?v=SwpkPf63304 249 webm audio only tiny 66k , opus @ 50k (48000Hz), 31.06MiB 250 webm audio only tiny 89k , opus @ 70k (48000Hz), 41.10MiB 140 m4a audio only tiny 135k , m4a_dash container, mp4a.40.2@128k (44100Hz), 83.58MiB 251 webm audio only tiny 179k , opus @160k (48000Hz), 83.12MiB 394 mp4 256x144 144p 99k , av01.0.00M.08, 25fps, video only, 50.33MiB 278 webm 256x144 144p 127k , webm container, vp9, 25fps, video only, 58.19MiB 160 mp4 256x144 144p 155k , avc1.4d400c, 25fps, video only, 63.09MiB 242 webm 426x240 240p 226k , vp9, 25fps, video only, 127.02MiB 395 mp4 426x240 240p 237k , av01.0.00M.08, 25fps, video only, 111.59MiB 243 webm 640x360 360p 432k , vp9, 25fps, video only, 230.93MiB 133 mp4 426x240 240p 456k , avc1.4d4015, 25fps, video only, 147.51MiB 396 mp4 640x360 360p 483k , av01.0.01M.08, 25fps, video only, 206.01MiB 244 webm 854x480 480p 771k , vp9, 25fps, video only, 391.84MiB 397 mp4 854x480 480p 821k , av01.0.04M.08, 25fps, video only, 365.63MiB 134 mp4 640x360 360p 995k , avc1.4d401e, 25fps, video only, 288.22MiB 398 mp4 1280x720 720p 1529k , av01.0.05M.08, 25fps, video only, 730.90MiB 247 webm 1280x720 720p 1539k , vp9, 25fps, video only, 733.20MiB 135 mp4 854x480 480p 1638k , avc1.4d401e, 25fps, video only, 423.79MiB 399 mp4 1920x1080 1080p 2658k , av01.0.08M.08, 25fps, video only, 1.26GiB 248 webm 1920x1080 1080p 2693k , vp9, 25fps, video only, 1.53GiB 136 mp4 1280x720 720p 3117k , avc1.4d401f, 25fps, video only, 734.95MiB 137 mp4 1920x1080 1080p 5577k , avc1.640028, 25fps, video only, 2.37GiB 18 mp4 640x360 360p 724k , avc1.42001E, 25fps, mp4a.40.2@ 96k (44100Hz), 467.68MiB (best) In the first column a reference number appears, that will be our option to choose, for example 18 which is the last one on that list:\n$ youtube-dl -f 18 https://www.youtube.com/watch?v=SwpkPf63304 Get only audio (mp3) $ youtube-dl -x --audio-format mp3 https://www.youtube.com/watch?v=SwpkPf63304  References\nhttps://www.tecmint.com/download-mp3-song-from-youtube-videos/\nhttps://blog.desdelinux.net/youtube-dl-tips-que-no-sabias/\nhttp://www.webupd8.org/2014/02/video-downloader-youtube-dl-gets.html\n","date":"17","image":"images/post/07.jpg","permalink":"https://examplesite.org/blog/download-videos-from-youtube-with-youtube-dl/","tags":["youtube","youtube-dl"],"title":"Download videos from YouTube with youtube-dl"}]